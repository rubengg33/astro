---
// Define la estructura del Post
interface Post {
  id: string;
  slug: string;
  title: string;
  description: string;
  image: string;
  genres: string[];
  likes: number;
}

// Recibe 'posts' como propiedad
const { posts } = Astro.props as { posts: Post[]; };

import Like from "./Like.jsx";
---

<div class="container my-12 mx-auto px-4 md:px-12">
  <div class="flex flex-wrap -mx-1 lg:-mx-4">
    {posts.map((item) => (
      <div class="my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3 border-transparent hover:border-white border-2 rounded-3xl">
        <article class="overflow-hidden rounded-lg shadow-lg">
          <a href={`/blog/${item.slug}`}>
            <img alt="Placeholder" class="block h-auto w-full object-cover" src={item.image} />
          </a>

          <header class="flex items-center justify-between leading-tight p-2 md:p-4">
            <h1 class="text-lg">
              <a class="no-underline hover:underline text-white font-bold" href={`/blog/${item.slug}`}>
                {item.title}
              </a>
            </h1>
          </header>

          <footer class="flex items-center justify-between leading-none p-2 md:p-4">
            <Like postId={item.id} initialLikes={item.likes} onLikeUpdate={(likes: number) => item.likes = likes} client:load/> 
          </footer>
        </article>
      </div>
    ))}
  </div>
</div>
